#include <graphics.h>
#include <iostream>
using namespace std;
int posX[9],posY[9];
int flag=0;
int q = 0;
int sq;
int i;

void draw_guide(){

    line(50,50,125,50);
    line(50,75,125,75);

    line(75,25,75,100);
    line(100,25,100,100);

    outtextxy(62.5,25,"1");
    outtextxy(87.5,25,"2");
    outtextxy(112,25,"3");
    outtextxy(62.5,50+5,"4");
    outtextxy(87.5,50+5,"5");
    outtextxy(112,50+5,"6");
    outtextxy(62.5,75+5,"7");
    outtextxy(87.5,75+5,"8");
    outtextxy(112,75+5,"9");
}
void draw_table(){


    line(250,200,550,200);
    line(250,300,550,300);

    line(350,100,350,400);
    line(450,100,450,400);
}

void input(int player[],int i){
    while(1){
    if(GetAsyncKeyState(0x31)){
        posX[i] = 300;
        posY[i] = 150;
        player[i] = q;
        sq = 1;
        break;
    }
    else if(GetAsyncKeyState(0x32)){
        posX[i] = 395;
        posY[i] = 150;
        player[i] = q;
        sq = 2;
        break;
    }
    else if(GetAsyncKeyState(0x33)){
        posX[i] = 500;
        posY[i] = 150;
        player[i] = q;
        sq = 3;
        break;
    }
    else if(GetAsyncKeyState(0x34)){
        posX[i] = 300;
        posY[i] = 250;
        player[i] = q;
        sq = 4;
        break;
    }
    else if(GetAsyncKeyState(0x35)){
        posX[i] = 395;
        posY[i] = 250;
        player[i] = q;
        sq = 5;
        break;
    }
    else if(GetAsyncKeyState(0x36)){
        posX[i] = 500;
        posY[i] = 250;
        player[i] = q;
        sq = 6;
        break;
    }
    else if(GetAsyncKeyState(0x37)){
        posX[i] = 300;
        posY[i] = 350;
        player[i] = q;
        sq = 7;
        break;
    }
    else if(GetAsyncKeyState(0x38)){
        posX[i] = 395;
        posY[i] = 350;
        player[i] = q;
        sq = 8;
        break;
    }
    else if(GetAsyncKeyState(0x39)){
        posX[i] = 500;
        posY[i] = 350;
        player[i] = q;
        sq = 9;
        break;
    }
    }
}

void X_win(){
    setactivepage(1);
    setvisualpage(1);
	settextstyle(8,0,10);
	outtextxy(380,200,"X");
	settextstyle(8,0,5);
	outtextxy(345,350,"Winner");
	flag = 1;
	delay(1000);
}

void O_win(){
    setactivepage(1);
    setvisualpage(1);
	settextstyle(8,0,10);
	outtextxy(380,200,"O");
	settextstyle(8,0,5);
	outtextxy(345,350,"Winner");
	flag = 1;
	delay(1000);
}

void check_win(int for_check[]){
    if(for_check[1] == for_check[2] && for_check[2] == for_check[3]){
        if(for_check[1]==0){
            X_win();
        }
        else{
            O_win();
        }
        i=10;
    }
    else if(for_check[4] == for_check[5] && for_check[5] == for_check[6]){
        if(for_check[1]==0){
            X_win();
        }
        else{
            O_win();
        }
        i=10;
    }
    else if(for_check[7] == for_check[8] && for_check[8] == for_check[9]){
        if(for_check[1]==0){
            X_win();
        }
        else{
            O_win();
        }
        i=10;
    }
    else if(for_check[1] == for_check[4] && for_check[4] == for_check[7]){
        if(for_check[1]==0){
            X_win();
        }
        else{
            O_win();
        }
        i=10;
    }
    else if(for_check[2] == for_check[5] && for_check[5] == for_check[8]){
        if(for_check[1]==0){
            X_win();
        }
        else{
            O_win();
        }
        i=10;
    }
    else if(for_check[3] == for_check[6] && for_check[6] == for_check[9]){
        if(for_check[1]==0){
            X_win();
        }
        else{
            O_win();
        }
        i=10;
    }
    else if(for_check[1] == for_check[5] && for_check[5] == for_check[9]){
        if(for_check[1]==0){
            X_win();
        }
        else{
            O_win();
        }
        i=10;
    }
    else if(for_check[3] == for_check[5] && for_check[5] == for_check[7]){
        if(for_check[1]==0){
            X_win();
        }
        else{
            O_win();
        }
        i=10;
    }
}

void output(int player[],int i){
    if(player[i] == 0){
        settextstyle(8,0,3);
        outtextxy(posX[i],posY[i],"X");
        q=1;
    }
    else if(player[i] == 1){
        settextstyle(8,0,3);
        outtextxy(posX[i],posY[i],"O");
        q=0;
    }
}



main(){

    initwindow(800,600,"TIC TAC TOE");

    int n = 9;
    int player[n];
    int for_check[10];
        while(flag==0){
            draw_table();
            draw_guide();
            for(i=0;i<n;i++){
                input(player,i);
                output(player,i);
                delay(250);
                for_check[sq] = player[i];
                cout<<player[i] << "\t";
                cout<<sq << "\n";
                check_win(for_check);
            }
            delay(1000);
        }
    getch();
    closegraph();
}
